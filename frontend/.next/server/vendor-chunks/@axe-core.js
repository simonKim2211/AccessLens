"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@axe-core";
exports.ids = ["vendor-chunks/@axe-core"];
exports.modules = {

/***/ "(ssr)/./node_modules/@axe-core/react/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@axe-core/react/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ reactAxe),\n/* harmony export */   logToConsole: () => (/* binding */ logToConsole)\n/* harmony export */ });\n/* harmony import */ var axe_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axe-core */ \"(ssr)/./node_modules/axe-core/axe.js\");\n/* harmony import */ var requestidlecallback__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! requestidlecallback */ \"(ssr)/./node_modules/requestidlecallback/index.js\");\n// index.ts\n\n\n\n// after.ts\nvar restoreFunctions = [];\nfunction after(host, name, cb) {\n  const originalFn = host[name];\n  let restoreFn;\n  if (originalFn) {\n    host[name] = function(...args) {\n      originalFn.apply(this, args);\n      cb(host);\n    };\n    restoreFn = function() {\n      host[name] = originalFn;\n    };\n  } else {\n    host[name] = function() {\n      cb(host);\n    };\n    restoreFn = function() {\n      delete host[name];\n    };\n  }\n  restoreFunctions.push(restoreFn);\n}\nafter.restorePatchedMethods = function() {\n  restoreFunctions.forEach((restoreFn) => restoreFn());\n  restoreFunctions = [];\n};\n\n// cache.ts\nvar _cache = {};\nvar cache = {\n  set(key, value) {\n    _cache[key] = value;\n  },\n  get(key) {\n    return _cache[key];\n  },\n  clear() {\n    Object.keys(_cache).forEach((key) => {\n      delete _cache[key];\n    });\n  }\n};\nvar cache_default = cache;\n\n// index.ts\nvar requestIdleCallback = requestidlecallback__WEBPACK_IMPORTED_MODULE_1__.request;\nvar cancelIdleCallback = requestidlecallback__WEBPACK_IMPORTED_MODULE_1__.cancel;\nvar React;\nvar ReactDOM;\nvar logger;\nvar lightTheme = {\n  serious: \"#d93251\",\n  minor: \"#d24700\",\n  text: \"black\"\n};\nvar darkTheme = {\n  serious: \"#ffb3b3\",\n  minor: \"#ffd500\",\n  text: \"white\"\n};\nvar theme = window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? darkTheme : lightTheme;\nvar boldCourier = \"font-weight:bold;font-family:Courier;\";\nvar critical = `color:${theme.serious};font-weight:bold;`;\nvar serious = `color:${theme.serious};font-weight:normal;`;\nvar moderate = `color:${theme.minor};font-weight:bold;`;\nvar minor = `color:${theme.minor};font-weight:normal;`;\nvar defaultReset = `font-color:${theme.text};font-weight:normal;`;\nvar idleId;\nvar timeout;\nvar context;\nvar conf;\nvar _createElement;\nvar components = {};\nvar nodes = [document.documentElement];\nfunction debounce(func, wait, immediate) {\n  let _timeout;\n  return function(...args) {\n    const later = () => {\n      _timeout = null;\n      if (!immediate) func.apply(this, args);\n    };\n    const callNow = immediate && !_timeout;\n    clearTimeout(_timeout);\n    _timeout = setTimeout(later, wait);\n    if (callNow) func.apply(this, args);\n  };\n}\nfunction getPath(node) {\n  const path = [node];\n  while (node && node.nodeName.toLowerCase() !== \"html\") {\n    path.push(node.parentNode);\n    node = node.parentNode;\n  }\n  if (!node || !node.parentNode) {\n    return null;\n  }\n  return path.reverse();\n}\nfunction getCommonParent(nodes2) {\n  let path;\n  let nextPath;\n  if (nodes2.length === 1) {\n    return nodes2.pop();\n  }\n  while (!path && nodes2.length) {\n    path = getPath(nodes2.pop());\n  }\n  while (nodes2.length) {\n    nextPath = getPath(nodes2.pop());\n    if (nextPath) {\n      path = path.filter((node, index) => {\n        return nextPath.length > index && nextPath[index] === node;\n      });\n    }\n  }\n  return path ? path[path.length - 1] : document;\n}\nfunction logElement(node, logFn) {\n  const el = document.querySelector(node.target.toString());\n  if (!el) {\n    logFn(\"Selector: %c%s\", boldCourier, node.target.toString());\n  } else {\n    logFn(\"Element: %o\", el);\n  }\n}\nfunction logHtml(node) {\n  console.log(\"HTML: %c%s\", boldCourier, node.html);\n}\nfunction logFailureMessage(node, key) {\n  const message = axe_core__WEBPACK_IMPORTED_MODULE_0__._audit.data.failureSummaries[key].failureMessage(\n    node[key].map((check) => check.message || \"\")\n  );\n  console.error(message);\n}\nfunction failureSummary(node, key) {\n  if (node[key].length > 0) {\n    logElement(node, console.groupCollapsed);\n    logHtml(node);\n    logFailureMessage(node, key);\n    let relatedNodes = [];\n    node[key].forEach((check) => {\n      relatedNodes = relatedNodes.concat(check.relatedNodes);\n    });\n    if (relatedNodes.length > 0) {\n      console.groupCollapsed(\"Related nodes\");\n      relatedNodes.forEach((relatedNode) => {\n        logElement(relatedNode, console.log);\n        logHtml(relatedNode);\n      });\n      console.groupEnd();\n    }\n    console.groupEnd();\n  }\n}\nfunction checkAndReport(node, timeout2) {\n  const disableDeduplicate = conf[\"disableDeduplicate\"];\n  if (idleId) {\n    cancelIdleCallback(idleId);\n    idleId = void 0;\n  }\n  return new Promise((resolve, reject) => {\n    nodes.push(node);\n    idleId = requestIdleCallback(\n      () => {\n        let n = context;\n        if (n === void 0) {\n          n = getCommonParent(nodes.filter((node2) => node2.isConnected));\n          if (n.nodeName.toLowerCase() === \"html\") {\n            n = document;\n          }\n        }\n        axe_core__WEBPACK_IMPORTED_MODULE_0__.configure({ allowedOrigins: [\"<unsafe_all_origins>\"] });\n        axe_core__WEBPACK_IMPORTED_MODULE_0__.run(\n          n,\n          { reporter: \"v2\" },\n          function(error, results) {\n            if (error) {\n              return reject(error);\n            }\n            results.violations = results.violations.filter((result) => {\n              result.nodes = result.nodes.filter((node2) => {\n                const key = node2.target.toString() + result.id;\n                const retVal = !cache_default.get(key);\n                cache_default.set(key, key);\n                return disableDeduplicate || retVal;\n              });\n              return !!result.nodes.length;\n            });\n            if (results.violations.length) {\n              logger(results);\n            }\n            resolve();\n          }\n        );\n      },\n      {\n        timeout: timeout2\n      }\n    );\n  });\n}\nfunction checkNode(component) {\n  let node;\n  try {\n    node = ReactDOM.findDOMNode(component);\n  } catch (e) {\n    console.group(\"%caxe error: could not check node\", critical);\n    console.group(\"%cComponent\", serious);\n    console.error(component);\n    console.groupEnd();\n    console.group(\"%cError\", serious);\n    console.error(e);\n    console.groupEnd();\n    console.groupEnd();\n  }\n  if (node) {\n    checkAndReport(node, timeout);\n  }\n}\nfunction componentAfterRender(component) {\n  const debounceCheckNode = debounce(checkNode, timeout, true);\n  after(component, \"componentDidMount\", debounceCheckNode);\n  after(component, \"componentDidUpdate\", debounceCheckNode);\n}\nfunction addComponent(component) {\n  const reactInstance = component._reactInternalInstance || {};\n  const reactInstanceDebugID = reactInstance._debugID;\n  const reactFiberInstance = component._reactInternalFiber || {};\n  const reactFiberInstanceDebugID = reactFiberInstance._debugID;\n  const reactInternals = component._reactInternals || {};\n  const reactInternalsDebugID = reactInternals._debugID;\n  if (reactInstanceDebugID && !components[reactInstanceDebugID]) {\n    components[reactInstanceDebugID] = component;\n    componentAfterRender(component);\n  } else if (reactFiberInstanceDebugID && !components[reactFiberInstanceDebugID]) {\n    components[reactFiberInstanceDebugID] = component;\n    componentAfterRender(component);\n  } else if (reactInternalsDebugID && !components[reactInternalsDebugID]) {\n    components[reactInternalsDebugID] = component;\n    componentAfterRender(component);\n  }\n}\nfunction logToConsole(results) {\n  console.group(\"%cNew axe issues\", serious);\n  results.violations.forEach((result) => {\n    let fmt;\n    switch (result.impact) {\n      case \"critical\":\n        fmt = critical;\n        break;\n      case \"serious\":\n        fmt = serious;\n        break;\n      case \"moderate\":\n        fmt = moderate;\n        break;\n      case \"minor\":\n        fmt = minor;\n        break;\n      default:\n        fmt = minor;\n        break;\n    }\n    console.groupCollapsed(\n      \"%c%s: %c%s %s\",\n      fmt,\n      result.impact,\n      defaultReset,\n      result.help,\n      result.helpUrl\n    );\n    result.nodes.forEach((node) => {\n      failureSummary(node, \"any\");\n      failureSummary(node, \"none\");\n    });\n    console.groupEnd();\n  });\n  console.groupEnd();\n}\nfunction reactAxe(_React, _ReactDOM, _timeout, _conf = {}, _context, _logger) {\n  React = _React;\n  ReactDOM = _ReactDOM;\n  timeout = _timeout;\n  context = _context;\n  conf = _conf;\n  logger = _logger || logToConsole;\n  const runOnly = conf[\"runOnly\"];\n  if (runOnly) {\n    conf[\"rules\"] = axe_core__WEBPACK_IMPORTED_MODULE_0__.getRules(runOnly).map((rule) => ({ ...rule, id: rule.ruleId, enabled: true }));\n    conf[\"disableOtherRules\"] = true;\n  }\n  if (Object.keys(conf).length > 0) {\n    axe_core__WEBPACK_IMPORTED_MODULE_0__.configure(conf);\n  }\n  axe_core__WEBPACK_IMPORTED_MODULE_0__.configure({ allowedOrigins: [\"<unsafe_all_origins>\"] });\n  if (!_createElement) {\n    _createElement = React.createElement;\n    React.createElement = function(...args) {\n      const reactEl = _createElement.apply(this, args);\n      if (reactEl._owner && reactEl._owner._instance) {\n        addComponent(reactEl._owner._instance);\n      } else if (reactEl._owner && reactEl._owner.stateNode) {\n        addComponent(reactEl._owner.stateNode);\n      }\n      return reactEl;\n    };\n  }\n  return checkAndReport(document.body, timeout);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@axe-core/react/dist/index.mjs\n");

/***/ })

};
;